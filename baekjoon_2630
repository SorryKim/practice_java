// baekjoon_2630
// https://www.acmicpc.net/problem/2630

import java.io.*;
import java.util.*;

public class Main {
	public static int white = 0;
	public static int blue = 0;
	public static int[][] paper;
	
	public static void main(String[] args) throws IOException{
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		int N = Integer.parseInt(br.readLine());
		paper = new int[N][N];
		
		for(int i = 0; i < N; i++) {
			StringTokenizer st;
			st = new StringTokenizer(br.readLine(), " ");
			for(int j = 0; j < N; j++) {
				paper[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		calc(0,0,N);
		bw.write(Integer.toString(white) + "\n");
		bw.write(Integer.toString(blue) + "\n");
		bw.close();
		br.close();
	}
	
	// 해당 구역이 전원 같은지 확인하는 메소드
	public static boolean check(int row, int col, int n) {
		int firstColor = paper[row][col];
		
		for(int i = row; i < row + n; i++) {
			for(int j = col; j < col + n; j++) {
				if(firstColor != paper[i][j])
					return false;
			}
		}
		
		return true;
	}
	
	public static void calc(int row, int col, int n) {
		// 해당 구역이 전원 같을 시
		if(check(row,col,n)) {
			if(paper[row][col] == 1)
				blue++;
			if(paper[row][col] == 0)
				white++;
			return;
		}
		
		// 아닌 것 발견 시
		else {
			int num = n / 2;
			calc(row, col, num);
			calc(row + num, col, num);
			calc(row, col + num, num);
			calc(row + num, col + num, num);
		}
	}
}
