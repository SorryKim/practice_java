package practice;

// baekjoon_1149
// https://www.acmicpc.net/problem/1149

import java.io.*;
import java.util.*;
import java.lang.Math;

public class Main {
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int[][] dp = new int[N][3]; // 누적합의 값을 저장할 배열
		int[][] cost = new int[N][3]; // 해당 집에서 색에 따른 가격을 저장할 배열
		int result = 0;
		
		// 페인트를 칠하는 비용 받기
		for(int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			int r = Integer.parseInt(st.nextToken());
			int g = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			cost[i][0] = r;
			cost[i][1] = g;
			cost[i][2] = b;
		}
		
		// 초기값 설정
		dp[0][0] = cost[0][0];
		dp[0][1] = cost[0][1];
		dp[0][2] = cost[0][2];
		
		
		for(int i = 1; i < N; i++) {
			// 빨간색으로 칠할 경우
			dp[i][0] = Math.min(dp[i-1][1], dp[i-1][2]) + cost[i][0];
			// 파란색으로 칠할 경우
			dp[i][1] = Math.min(dp[i-1][0], dp[i-1][2]) + cost[i][1];
			// 녹색으로 칠할 경우
			dp[i][2] = Math.min(dp[i-1][1], dp[i-1][0]) + cost[i][2];
		}
		
		result = Math.min(dp[N-1][0], Math.min(dp[N-1][1], dp[N-1][2]));
		
		bw.write(Integer.toString(result));
		
		
		br.close();
		bw.close();
	}

}
