// baekjoon_11403
// https://www.acmicpc.net/problem/11403

import java.io.*;
import java.util.*;

public class Main {

	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int[][] array = new int[N][N];
		
		// 그래프 입력 받기
		for(int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j = 0; j < N; j++) {
				array[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		for(int i = 0; i < N; i++) {
			for(int j = 0; j < N; j++) {
				for(int k = 0; k < N; k++) {
					Traversal(i,j,k,array);
				}
			}
		}
		
		for(int i = 0; i < N; i++) {
			for(int j = 0; j < N; j++) {
				bw.write(Integer.toString(array[i][j]) + " ");
			}
			bw.write("\n");
		}
		
		br.close();
		bw.close();
	}
	
	// 탐색하는 메소드 a -> b , b -> c 인 경우 a -> c를 추가해준다.
	public static void Traversal(int a, int b, int c, int[][] array) {
		if(array[b][a] == 1 && array [a][c] == 1) {
			array[b][c] = 1;
		}
	}
}
